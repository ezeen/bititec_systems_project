# Generated by Django 5.1.7 on 2025-06-12 17:10

import bititec.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('acc_name', models.CharField(max_length=255)),
                ('acc_brand', models.CharField(max_length=255)),
                ('acc_type', models.CharField(max_length=255)),
                ('ref_no', models.CharField(max_length=255, unique=True)),
                ('unit_value', models.PositiveIntegerField()),
                ('intial_quantity', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('description', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acc_condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used'), ('Refurbished', 'Refurbished')], max_length=20)),
                ('color_type', models.CharField(max_length=100)),
                ('supplier_name', models.CharField(max_length=255)),
                ('acc_status', models.CharField(choices=[('Available', 'Available'), ('Reserved', 'Reserved'), ('Out of Stock', 'Out of Stock'), ('Maintenance', 'Maintenance')], max_length=20)),
                ('is_transfer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccessoryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ClientMachine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=255)),
                ('client_location', models.CharField(max_length=255)),
                ('machine_name', models.CharField(max_length=255)),
                ('machine_brand', models.CharField(max_length=255)),
                ('serial_no', models.CharField(max_length=255, unique=True)),
                ('machine_type', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('machine_name', models.CharField(max_length=255)),
                ('machine_brand', models.CharField(max_length=255)),
                ('machine_type', models.CharField(max_length=255)),
                ('serial_no', models.CharField(max_length=255, unique=True)),
                ('unit_value', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('description', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('machine_condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used'), ('Refurbished', 'Refurbished')], max_length=20)),
                ('color_type', models.CharField(max_length=100)),
                ('supplier_name', models.CharField(max_length=255)),
                ('machine_status', models.CharField(choices=[('Available', 'Available'), ('Leased', 'Leased'), ('Out of Stock', 'Out of Stock'), ('Sold', 'Sold')], max_length=20)),
                ('is_transfer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('part_name', models.CharField(max_length=255)),
                ('part_brand', models.CharField(max_length=255)),
                ('part_type', models.CharField(max_length=255)),
                ('ref_no', models.CharField(max_length=255, unique=True)),
                ('unit_value', models.PositiveIntegerField()),
                ('intial_quantity', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('description', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('part_condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used'), ('Refurbished', 'Refurbished')], max_length=20)),
                ('color_type', models.CharField(max_length=100)),
                ('supplier_name', models.CharField(max_length=255)),
                ('part_status', models.CharField(choices=[('Available', 'Available'), ('Reserved', 'Reserved'), ('Out of Stock', 'Out of Stock'), ('Maintenance', 'Maintenance')], max_length=20)),
                ('is_transfer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('store_name', models.CharField(max_length=255)),
                ('store_location', models.CharField(max_length=255)),
                ('store_size', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstname', models.CharField(max_length=100, verbose_name='first name')),
                ('lastname', models.CharField(max_length=100, verbose_name='last name')),
                ('phonenumber', models.PositiveIntegerField(verbose_name='phone number')),
                ('role', models.CharField(choices=[('Director', 'Director'), ('Super Admin', 'Super Admin'), ('Technician Manager', 'Technician Manager'), ('Sales Manager', 'Sales Manager'), ('Inventory Manager', 'Inventory Manager'), ('Sales Member', 'Sales Member'), ('Technician', 'Technician')], default='Technician', max_length=20, verbose_name='role')),
                ('active', models.BooleanField(default=False, verbose_name='active')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('members', models.ManyToManyField(related_name='chat_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File')], default='text', max_length=10)),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to=bititec.models.message_file_path)),
                ('file_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='bititec.chatgroup')),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=255)),
                ('client_location', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('client_name', 'client_location')},
            },
        ),
        migrations.CreateModel(
            name='LeaseContract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=100)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('add_vat', models.BooleanField(default=False)),
                ('add_myq', models.BooleanField(default=False)),
                ('billed_myq', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('contract_type', models.CharField(choices=[('Lease', 'Lease'), ('Rental', 'Rental'), ('Maintenance', 'Maintenance')], max_length=20)),
                ('lease_no', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bititec.client')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bititec.machine')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bititec.store')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseAccInquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accessory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bititec.accessory')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acc_inquiries', to='bititec.leasecontract')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_type', models.CharField(max_length=100)),
                ('reported_by', models.CharField(max_length=255)),
                ('reported_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('fault_reported', models.TextField()),
                ('action_taken', models.JSONField(default=list)),
                ('meter_reading', models.PositiveIntegerField(default=0)),
                ('parts_required', models.JSONField(default=list)),
                ('parts_used', models.JSONField(default=list)),
                ('comments', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Complete', 'Complete')], default='Open', max_length=20)),
                ('department', models.CharField(max_length=100)),
                ('is_checked', models.BooleanField(default=False)),
                ('director_comment', models.TextField(blank=True)),
                ('ticket_no', models.CharField(max_length=50, unique=True)),
                ('spare_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_verification', models.BooleanField(default=False)),
                ('technician_manager_approval', models.BooleanField(default=False)),
                ('client_name', models.CharField(blank=True, max_length=255)),
                ('client_location', models.CharField(blank=True, max_length=255)),
                ('walk_in_machine_name', models.CharField(blank=True, max_length=255)),
                ('walk_in_machine_type', models.CharField(blank=True, max_length=255)),
                ('walk_in_serial_no', models.CharField(blank=True, max_length=255)),
                ('technician', models.ManyToManyField(related_name='calls', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bititec.client')),
                ('client_machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bititec.clientmachine')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bititec.machine')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('sale_type', models.CharField(choices=[('Internal', 'Internal'), ('Local', 'Local')], default='Internal', max_length=20)),
                ('local_client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sale_no', models.CharField(max_length=50, unique=True)),
                ('sale_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('add_vat', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bititec.client')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delivery_type', models.CharField(choices=[('Sale', 'Sale'), ('Lease', 'Lease')], default='Sale', max_length=20)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Transit', 'In Transit'), ('Delivered', 'Delivered'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('delivery_notes', models.TextField(blank=True)),
                ('customer_signature', models.BooleanField(default=False)),
                ('delivery_no', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='delivery_tasks', to=settings.AUTH_USER_MODEL)),
                ('lease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deliveries', to='bititec.leasecontract')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deliveries', to='bititec.sale')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_type', models.CharField(choices=[('Machine', 'Machine'), ('Part', 'Part'), ('Accessory', 'Accessory')], max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.PositiveIntegerField()),
                ('total_price', models.PositiveIntegerField()),
                ('custom_item', models.JSONField(blank=True, null=True)),
                ('accessory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_accessories', to='bititec.accessory')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bititec.machine')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_items', to='bititec.part')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bititec.sale')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCallToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('service_call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to='bititec.call')),
            ],
        ),
        migrations.AddField(
            model_name='part',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parts', to='bititec.store'),
        ),
        migrations.AddField(
            model_name='machine',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines', to='bititec.store'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accessories', to='bititec.store'),
        ),
        migrations.CreateModel(
            name='StoreInquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('part_name', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField()),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('add_vat', models.BooleanField(default=False)),
                ('is_issued', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Issued', 'Issued'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_inquiries', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('service_call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_inquiries', to='bititec.call')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='store_inquiry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bititec.storeinquiry'),
        ),
        migrations.CreateModel(
            name='LeasePartInquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='part_inquiries', to='bititec.leasecontract')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bititec.part')),
                ('store_inquiry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lease_part_inquiries', to='bititec.storeinquiry')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MeterReading',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('month', models.DateField()),
                ('meter_reading', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meter_readings', to='bititec.leasecontract')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bititec.machine')),
            ],
            options={
                'ordering': ['-month'],
                'unique_together': {('lease', 'month')},
            },
        ),
    ]
